customElements.get("product-form")||customElements.define("product-form",class extends HTMLElement{constructor(){super(),this.updateATCButton=this.updateATCButton.bind(this),this.form=this.querySelector("form"),this.isPreOrder=this.dataset.isPreOrder==="true",this.isBundle=this.dataset.isBundle==="true",this.isPreorderBundle=this.dataset.isPreorderBundle==="true",this.hasOnlyDefaultVariant=this.dataset.hasOnlyDefaultVariant==="true",this.variantId=this.dataset.variantId,this.section=this.dataset.section,this.form.addEventListener("submit",this.onSubmitHandler.bind(this)),this.cartNotification=document.querySelector("cart-notification"),(this.isPreOrder||this.isPreorderBundle)&&(this.observerConfig={attributes:!0,childList:!0,subtree:!0,characterData:!0},this.observer=new MutationObserver(this.updateATCButton),this.observer.observe(this.form,this.observerConfig),this.updateATCButton())}updateATCButton(){this.atcButton=this.querySelector(".product-form__submit > span"),this.atcButton.innerText.toLowerCase()===window.variantStrings.addToCart.toLowerCase()&&(this.observer.disconnect(),this.atcButton.innerText="Pre-Order Now",this.observer.observe(this.form,this.observerConfig))}async onSubmitHandler(evt){evt.preventDefault();const submitButton=this.querySelector('[type="submit"]');if(submitButton.classList.contains("loading"))return;if(this.handleErrorMessage(),evt.target.closest(".upsell")&&this.cartNotification.setActiveElement(document.activeElement),submitButton.setAttribute("aria-disabled",!0),submitButton.classList.add("loading"),this.querySelector(".loading-overlay__spinner").classList.remove("hidden"),!this.validateInventory()){submitButton.classList.remove("loading"),submitButton.removeAttribute("aria-disabled"),this.querySelector(".loading-overlay__spinner").classList.add("hidden");return}const config=fetchConfig("javascript");config.headers["X-Requested-With"]="XMLHttpRequest",config.body=JSON.stringify({...JSON.parse(serializeForm(this.form)),sections:this.cartNotification.getSectionsToRender().map(section=>section.id),sections_url:window.location.pathname}),fetch(`${routes.cart_add_url}`,config).then(response=>response.json()).then(response=>{if(response.status){this.handleErrorMessage(response.description);return}let open=!evt.target.closest(".upsell");this.cartNotification.renderContents(response,open)}).catch(e=>{console.error(e)}).finally(()=>{submitButton.classList.remove("loading"),submitButton.removeAttribute("aria-disabled"),this.querySelector(".loading-overlay__spinner").classList.add("hidden"),this.dispatchEvent(new CustomEvent("cart:updated",{bubbles:!0})),this.dispatchEvent(new CustomEvent("cart:updateCloseOut",{bubbles:!0})),evt.target.closest(".upsell")&&document.querySelector("cart-items").getNewCart()})}validateInventory(){const selectedQuantity=parseInt(document.getElementById(`Quantity-${this.section}`).value||1,10),variantSelect=document.querySelector(`variant-selects[data-section="${this.section}"], variant-radios[data-section="${this.section}"]`),bundleInfo=document.querySelector(`#BundleInfo-${this.section}`);if(this.isBundle){let isValid=!0;if(!(bundleInfo&&bundleInfo.available))return!1;let formData=JSON.parse(serializeForm(this.form)),atcVariants=this.expandBundleFormProperties(formData.properties);for(const[variantId,bundle]of Object.entries(atcVariants)){let variant=window[this.section].variantsById[variantId];if(variant.safetyStock=variant.safety_stock,window.inventoryValidator.getSellableInventoryForVariant(variant)<selectedQuantity*bundle.quantity){const message=window.cartStrings.bundleQuantityError;this.handleErrorMessage(message),isValid=!1;break}}return isValid}else{this.hasOnlyDefaultVariant&&this.variantId?this.currentVariant=window[this.section].variantsById[this.variantId]:this.hasOnlyDefaultVariant||variantSelect&&variantSelect.currentVariant&&(this.variantId=variantSelect.currentVariant.id,this.currentVariant=window[this.section].variantsById[this.variantId]),this.currentVariant.safetyStock=window[this.section].safetyStock;const availableInventory=window.inventoryValidator.getSellableInventoryForVariant(this.currentVariant);if(availableInventory<selectedQuantity){const message=window.cartStrings.quantityError.replace("[quantity]",availableInventory);this.handleErrorMessage(message)}return availableInventory>=selectedQuantity}}expandBundleFormProperties(bundleData){const expandedData={};let bundleLineItemData={};return Object.entries(bundleData).filter(([key])=>key.includes("_line_item_data_for_product_")).forEach(lineItem=>{let productId=lineItem[0].replace("_line_item_data_for_product_",""),data=JSON.parse(lineItem[1]),quantity=data["quantity in bundle"],safetyStock=data["safety stock"];bundleLineItemData[productId]=bundleLineItemData[productId]||{quantity,safetyStock}}),Object.entries(bundleData).filter(([key])=>key.includes("_bundle_selectedVariantOnProduct_")).forEach(variant=>{let productId=variant[0].replace("_bundle_selectedVariantOnProduct_",""),variantId=variant[1];expandedData[variantId]=expandedData[variantId]||{quantity:0,productId},expandedData[variantId].quantity+=bundleLineItemData[productId].quantity,expandedData[variantId].safetyStock=bundleLineItemData[productId].safetyStock}),expandedData}handleErrorMessage(errorMessage=!1){this.errorMessageWrapper=this.errorMessageWrapper||this.querySelector(".product-form__error-message-wrapper"),this.errorMessage=this.errorMessage||this.errorMessageWrapper.querySelector(".product-form__error-message"),this.errorMessageWrapper.toggleAttribute("hidden",!errorMessage),errorMessage&&(this.errorMessage.textContent=errorMessage)}});
//# sourceMappingURL=/cdn/shop/t/55/assets/product-form.js.map?v=79296126667331879041713475972
